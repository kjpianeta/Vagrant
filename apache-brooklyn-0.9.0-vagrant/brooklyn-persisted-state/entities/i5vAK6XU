<entity>
  <brooklynVersion>0.9.0</brooklynVersion>
  <type>org.apache.brooklyn.entity.stock.BasicApplicationImpl</type>
  <id>i5vAK6XU</id>
  <displayName>Mongo3</displayName>
  <tags>
    <org.apache.brooklyn.core.mgmt.BrooklynTags_-NamedStringTag>
      <kind>yaml_spec</kind>
      <contents>name: Mongo3
location:
  byon:
    user: vagrant
    password: vagrant
    hosts:
      - 10.10.10.101
      - 10.10.10.102
      - 10.10.10.103
      - 10.10.10.104
services:
- serviceType: brooklyn.entity.nosql.mongodb.MongoDBReplicaSet
  name: MongoDB Replica Set
  brooklyn.config:
    cluster.initial.size: 3</contents>
    </org.apache.brooklyn.core.mgmt.BrooklynTags_-NamedStringTag>
  </tags>
  <children>
    <string>UB1W9QNi</string>
  </children>
  <config>
    <camp.template.id>u1w0hVnN</camp.template.id>
    <brooklyn.wrapper__app type="boolean">true</brooklyn.wrapper__app>
  </config>
  <locations>
    <string>qpl0SMeT</string>
  </locations>
  <attributes>
    <service.notUp.indicators>
      <MutableMap>
        <service.state>Application starting</service.state>
      </MutableMap>
    </service.notUp.indicators>
    <service.problems>
      <MutableMap/>
    </service.problems>
    <service.isUp type="boolean">false</service.isUp>
    <service.state type="org.apache.brooklyn.core.entity.lifecycle.Lifecycle">STARTING</service.state>
    <service.state.expected>
      <org.apache.brooklyn.core.entity.lifecycle.Lifecycle_-Transition>
        <state>STARTING</state>
        <timestampUtc>1468890127852</timestampUtc>
      </org.apache.brooklyn.core.entity.lifecycle.Lifecycle_-Transition>
    </service.state.expected>
  </attributes>
  <enrichers>
    <string>pp2DmtOM</string>
    <string>EBAdG4zF</string>
    <string>e7X3GQWT</string>
  </enrichers>
  <configKeys>
    <camp.template.id>
      <configKey>
        <name>camp.template.id</name>
        <type>java.lang.String</type>
        <description>UID of the component in the CAMP template from which this entity was created</description>
        <reconfigurable>false</reconfigurable>
        <inheritance class="org.apache.brooklyn.config.ConfigInheritance$None"/>
        <constraint class="com.google.common.base.Predicates$ObjectPredicate">ALWAYS_TRUE</constraint>
      </configKey>
    </camp.template.id>
    <brooklyn.wrapper__app>
      <configKey>
        <name>brooklyn.wrapper_app</name>
        <type>java.lang.Boolean</type>
        <description>brooklyn.wrapper_app</description>
        <reconfigurable>false</reconfigurable>
        <constraint class="com.google.common.base.Predicates$ObjectPredicate">ALWAYS_TRUE</constraint>
      </configKey>
    </brooklyn.wrapper__app>
  </configKeys>
  <attributeKeys>
    <service.notUp.indicators>
      <attributeSensor>
        <typeToken class="com.google.common.reflect.TypeToken$SimpleTypeToken">
          <runtimeType class="com.google.common.reflect.Types$ParameterizedTypeImpl">
            <argumentsList>
              <java-class>java.lang.String</java-class>
              <java-class>java.lang.Object</java-class>
            </argumentsList>
            <rawType>java.util.Map</rawType>
          </runtimeType>
        </typeToken>
        <name>service.notUp.indicators</name>
        <description>A map of namespaced indicators that the service is not up</description>
        <persistence>REQUIRED</persistence>
      </attributeSensor>
    </service.notUp.indicators>
    <service.problems>
      <attributeSensor>
        <typeToken class="com.google.common.reflect.TypeToken$SimpleTypeToken">
          <runtimeType class="com.google.common.reflect.Types$ParameterizedTypeImpl">
            <argumentsList>
              <java-class>java.lang.String</java-class>
              <java-class>java.lang.Object</java-class>
            </argumentsList>
            <rawType>java.util.Map</rawType>
          </runtimeType>
        </typeToken>
        <name>service.problems</name>
        <description>A map of namespaced indicators of problems with a service</description>
        <persistence>REQUIRED</persistence>
      </attributeSensor>
    </service.problems>
    <service.state>
      <attributeSensor>
        <type>org.apache.brooklyn.core.entity.lifecycle.Lifecycle</type>
        <name>service.state</name>
        <description>Actual lifecycle state of the service</description>
        <persistence>REQUIRED</persistence>
      </attributeSensor>
    </service.state>
    <service.state.expected>
      <attributeSensor>
        <type>org.apache.brooklyn.core.entity.lifecycle.Lifecycle$Transition</type>
        <name>service.state.expected</name>
        <description>Last controlled change to service state, indicating what the expected state should be</description>
        <persistence>REQUIRED</persistence>
      </attributeSensor>
    </service.state.expected>
  </attributeKeys>
</entity>
